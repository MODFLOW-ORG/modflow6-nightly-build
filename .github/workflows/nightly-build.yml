name: MODFLOW 6 nightly build

on:
  schedule:
    # - cron: '0 2 * * *' # run at 2 AM UTC
    # - cron: '*/10 * * * *' # run every 10 minutes
    - cron: '20 */1 * * *' # run every hour at 20 minutes past the hour
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: linux.zip
          - os: macos-latest
            artifact_name: mac.zip
          - os: windows-latest
            artifact_name: win64.zip

    steps:
    - name: Get Current Time
      uses: 1466587594/get-current-time@v1.0.0
      id: current-time
      with:
        format: YYYYMMDD
    
    - name: Use current time
      env:
        TIME: "${{ steps.current-time.outputs.time }}"
        F_TIME: "${{ steps.current-time.outputs.formattedTime }}"
      run: echo $TIME $F_TIME

    - name: Create a Release
      if: matrix.os == 'ubuntu-latest'
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.current-time.outputs.formattedTime }}
        name: ${{ steps.current-time.outputs.formattedTime }} nightly build
        allowUpdates: true
        draft: false
        token: ${{ secrets.GITHUB_TOKEN }}  
          
    - uses: actions/checkout@v2
    - name: setup-conda
      uses: s-weigand/setup-conda@v1.0.3
      with:
        auto-update-conda: true
        miniconda-version: "latest"

    - name: Setup symbolic link to gfortran on Linux
      if: runner.os == 'Linux'
      run: |
        sudo ln -fs /usr/bin/gfortran-9 /usr/local/bin/gfortran

    - name: Print gfortran version
      shell: bash
      run: |
        gfortran --version       
        
    - name: Clone MODFLOW 6 repo
      run: |
        git clone https://github.com/MODFLOW-USGS/modflow6.git modflow6
      shell: bash
      
    - name: Determine MODFLOW 6 branch
      run: |
        pwd
        cd ./modflow6/
        git branch
        cd ../
        ls ./
    
    - name: Install python packages
      run: |
        conda info
        conda install pip requests appdirs nose
        # use pip to install numpy and matplotlib because of a windows issue
        pip install numpy matplotlib
        pip install https://github.com/modflowpy/flopy/zipball/develop
        pip install https://github.com/modflowpy/pymake/zipball/master
        
    - name: Print python package versions
      shell: python
      run: |
        import sys
        import nose
        import numpy as np
        import matplotlib as mpl
        import flopy
        import pymake
        flopypth = flopy.__path__[0]
        pymakepth = pymake.__path__[0]
        print("python version:     {}".format(sys.version))
        print("nosetest version:   {}".format(nose.__version__))
        print("numpy version:      {}".format(np.__version__))
        print("matplotlib version: {}".format(mpl.__version__))
        print("flopy version:      {}".format(flopy.__version__))
        print("pymake version:     {}".format(pymake.__version__))
        print("")
        print("flopy is installed in:  {}".format(flopypth))
        print("pymake is installed in: {}".format(pymakepth))
      
    - name: Build and zip applications
      shell: bash
      run: |
        cd ./modflow6/
        nosetests -v -w ./distribution build_nightly.py
        cd ../
        
    # Deploy releases
    - name: Upload compiled executables to the latest GitHub release
      uses: svenstaro/upload-release-action@2.0.0
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./modflow6/distribution/temp/${{ matrix.artifact_name }}
        tag: ${{ steps.current-time.outputs.formattedTime }}
        overwrite: true

    # Build LaTeX document
    - name: Update flopy MODFLOW 6 classes
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd ./modflow6/autotest
        python update_flopy.py
        cd ../../
      
    - name: Copy the modflow6/docs directory
      if: matrix.os == 'ubuntu-latest'
      shell: python
      run: |
        import shutil
        src = "/home/runner/work/modflow6-nightly-build/modflow6/doc/"
        dst = "./doc/"
        shutil.copytree(src, dst)  

    - name: Build mf6io latex document
      if: matrix.os == 'ubuntu-latest'
      uses: xu-cheng/latex-action@v2
      with:
        root_file: mf6io.nightlybuild.tex
        working_directory: /github/workspace/modflow6/doc/mf6io/

    - name: Deploy latex document
      if: matrix.os == 'ubuntu-latest'
      uses: svenstaro/upload-release-action@2.0.0
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./modflow6/doc/mf6io/mf6io.nightlybuild.pdf
        asset_name: mf6io.pdf
        tag: ${{ steps.current-time.outputs.formattedTime }}
        overwrite: true
        
