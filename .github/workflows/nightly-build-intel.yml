name: MODFLOW 6 intel nightly build
on:
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC
  push:
    branches:
      - master
      - develop*
      - ci-diagnose*
  pull_request:
    branches:
      - master
env:
  FC: ifort
jobs:
  build:
    name: Build binaries
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            artifact_name: linux
          - os: macos-12
            artifact_name: mac
          - os: windows-2022
            artifact_name: win64
    steps:

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Checkout modflow6
        uses: actions/checkout@v3
        with:
          repository: MODFLOW-USGS/modflow6
          path: modflow6
          ref: develop

      - name: Setup Python
        uses: actions/setup-python@v4.0.0
        with:
          python-version: 3.9

      - name: Install Python packages
        run: pip install -r requirements.txt

      - name: Setup Intel Fortran
        uses: modflowpy/install-intelfortran-action@v1

      - name: Build binaries
        working-directory: modflow6
        run: |
          meson setup builddir -Ddebug=false --prefix=$(pwd) --libdir=bin
          meson install -C builddir
          meson test --verbose --no-rebuild -C builddir

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: bin-${{ runner.os }}
          path: modflow6/bin

  docs:
    name: Build documentation
    needs: build
    runs-on: ubuntu-22.04
    steps:

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Checkout modflow6
        uses: actions/checkout@v3
        with:
          repository: MODFLOW-USGS/modflow6
          path: modflow6
          ref: develop

      - name: Setup Python
        uses: actions/setup-python@v4.0.0
        with:
          python-version: 3.9

      - name: Install Python packages
        run: pip install -r requirements.txt

      - name: Checkout usgslatex
        uses: actions/checkout@v3
        with:
          repository: MODFLOW-USGS/usgslatex
          path: usgslatex

      - name: Install TeX Live
        run: |
          sudo apt-get update
          sudo apt install texlive-latex-extra \
            texlive-science \
            texlive-font-utils \
            texlive-fonts-recommended \
            texlive-fonts-extra \
            dos2unix

      - name: Install USGS LaTeX style files and Univers font
        working-directory: usgslatex/usgsLaTeX
        run: sudo ./install.sh --all-users

      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: bin-${{ runner.os }}
          path: modflow6/bin

      - name: Checkout modflow6-examples
        uses: actions/checkout@v3
        with:
          repository: MODFLOW-USGS/modflow6-examples
          path: modflow6-examples

      - name: Cache modflow6 examples
        id: cache-examples
        uses: actions/cache@v3
        with:
          path: modflow6-examples/examples
          key: modflow6-examples-${{ hashFiles('modflow6-examples/scripts/**') }}

      - name: Install extra Python packages
        if: steps.cache-examples.outputs.cache-hit != 'true'
        working-directory: modflow6-examples/etc
        run: pip install -r requirements.pip.txt

      - name: Build example models
        if: steps.cache-examples.outputs.cache-hit != 'true'
        working-directory: modflow6-examples/etc
        run: python ci_build_files.py

      - name: Build docs
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          # example path below is hard-coded into modflow6/distribution/build_docs.py
          # once that's fixed, this can be removed
          mkdir -p modflow6-examples/examples/ex-gwf-twri01
          
          # execute permission may not have survived upload/download-artifact actions
          chmod +x modflow6/bin/mf6
          chmod +x modflow6/bin/mf5to6
          chmod +x modflow6/bin/zbud6
          
          # build the docs
          python modflow6/distribution/build_docs.py -d -b modflow6/bin -o docs

      - name: Upload docs
        uses: actions/upload-artifact@v3
        with:
          name: mf6io
          path: docs/mf6io.pdf

  dist:
    name: Build distributions
    needs: docs
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            artifact_name: linux
          - os: macos-12
            artifact_name: mac
          - os: windows-2022
            artifact_name: win64
    defaults:
      run:
        shell: bash
    steps:

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Checkout modflow6
        uses: actions/checkout@v3
        with:
          repository: MODFLOW-USGS/modflow6
          path: modflow6
          ref: develop

      - name: Setup Python
        uses: actions/setup-python@v4.0.0
        with:
          python-version: 3.9

      - name: Install Python packages
        run: pip install -r requirements.txt

      - name: Setup Intel Fortran
        uses: modflowpy/install-intelfortran-action@v1

      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: bin-${{ runner.os }}
          path: modflow6/bin

      - name: Update FloPy classes
        working-directory: modflow6/autotest
        run: python update_flopy.py

      - name: Checkout modflow6-examples
        uses: actions/checkout@v3
        with:
          repository: MODFLOW-USGS/modflow6-examples
          path: modflow6-examples

      - name: Cache modflow6 examples
        id: cache-examples
        uses: actions/cache@v3
        with:
          path: modflow6-examples/examples
          key: modflow6-examples-${{ hashFiles('modflow6-examples/scripts/**') }}

      - name: Install extra Python packages
        if: steps.cache-examples.outputs.cache-hit != 'true'
        working-directory: modflow6-examples/etc
        run: pip install -r requirements.pip.txt

      - name: Build example models
        if: steps.cache-examples.outputs.cache-hit != 'true'
        working-directory: modflow6-examples/etc
        run: python ci_build_files.py

      - name: Build distribution
        run: |
          # modflow6/distribution/build_dist.py expects the examples repo to exist,
          # but it's not needed for nightly builds, below can be removed when fixed
          mkdir -p modflow6-examples
          
          # build the dist
          python modflow6/distribution/build_dist.py -d -o ${{ matrix.artifact_name }}/bin

      - name: Zip distribution
        if: runner.os != 'Windows'
        run: zip -r ${{ matrix.artifact_name }}.zip ${{ matrix.artifact_name }} -x '*.DS_Store'

      - name: Zip distribution (Windows)
        if: runner.os == 'Windows'
        run: 7z a -tzip ${{ matrix.artifact_name }}.zip ${{ matrix.artifact_name }} -xr!libmf6.lib

      - name: Upload distribution
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}.zip

      - name: Upload mf6io docs
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v3.1.0
        with:
          name: mf6io
          path: ${{ matrix.artifact_name }}/doc/mf6io.pdf

  release:
    name: Create release
    needs: dist
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    if:
      github.event_name == 'push' || github.event_name == 'schedule'
    steps:

      - name: Delete Older Releases
        uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          keep_latest: 30
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifacts
        uses: actions/download-artifact@v3.0.0
        with:
          path: nightly

      - name: List files in the artifact directory
        run: ls -l nightly

      - name: Get time
        uses: josStorer/get-current-time@v2.0.0
        id: current-time
        with:
          format: YYYYMMDD

      - name: Show time
        env:
          TIME: "${{ steps.current-time.outputs.time }}"
          F_TIME: "${{ steps.current-time.outputs.formattedTime }}"
        run: echo $TIME $F_TIME

      - name: Create release
        uses: ncipollo/release-action@v1.10.0
        with:
          tag: ${{ steps.current-time.outputs.formattedTime }}
          name: ${{ steps.current-time.outputs.formattedTime }} nightly build
          body: "MODFLOW 6 nightly development build, compiled with Intel Fortran."
          draft: false
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: svenstaro/upload-release-action@2.3.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: nightly/**
          tag: ${{ steps.current-time.outputs.formattedTime }}
          overwrite: true
          file_glob: true

      # - name: Delete Artifact
      #   uses: GeekyEggo/delete-artifact@v1.0.0
      #   with:
      #     name: nightly
